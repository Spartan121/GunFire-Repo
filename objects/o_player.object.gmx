<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>s_ct_1</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-2</depth>
  <persistent>0</persistent>
  <parentName>obj_unit_par</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>hp = 100;
randomize();
event_inherited();
mov_spd = 7;
spd = 0;
team = 1;
r = 0;

image_speed = 0;
shooting = false;
feet_index = 0;

can_shoot = true;
dir = direction;
mass = 1000;
g_shoot = true;
g_timer = 0;

o_x = 0;
o_y = 0;
///
const = 30;
st_radius = 120;
gui_x[0] = st_radius+const;
gui_y[0] =( display_get_gui_height() - (st_radius+const));
gui_x[1] = (display_get_gui_width() - (st_radius+const));
gui_y[1] = (display_get_gui_height() - (st_radius+const));
stick_x[0] = gui_x[0];
stick_y[0] = gui_y[0];
stick_x[1] = gui_x[1];
stick_y[1] = gui_y[1];
st_pressed[0] = -1;
st_pressed[1] = -1;
vdir = 0;

head_index = irandom(5);
head_angle = image_angle;
head_sprite = s_ct_head;
round_button_radius = 54;
round_button_x[0] = round_button_radius+15;
round_button_y[0] = gui_y[0]-(st_radius+(round_button_radius+15));
wp_id = 0;


alarm[2] = 2;



</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>audio_play_sound(snd_foot_step,0,0);

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>shooting = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>randomize()
if (team==1){
sprite_index = choose(s_ct_1,s_ct_2,s_ct_3,s_ct_4);
wp_id = global.player_weapon;
head_sprite = s_ct_head;
}
else
if (team==2){
sprite_index = choose(s_t_1,s_t_2,s_t_3,s_t_4);
wp_id = global.player_weapon;
head_sprite = s_t_head;
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>g_shoot = true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>can_shoot = true;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (feet_index&gt;7) feet_index = 0;
audio_listener_position(x,y,0);
if (hp&lt;15)
{
ef_hud_message("Damage Criticall "+string(hp)+"%",c_red);
}
else
ef_hud_message("",c_red);

//End Step
scr_player_movement(floor(mov_spd));

scr_slide_move(o_CollisionBox,GMSetting[? "CollRes"]);


if (speed&gt;0)
{
feet_index+=0.25;
alarm[4] = 5;
}
dir = image_angle;
spd = speed; //point_distance(xprevious,yprevious,x,y);



if (hp&lt;=0)
{
hp = 100;
instance_create(x,y,o_ground_blood);
    if (team = 1) {
    x = o_ct_spawn.x;
    y = o_ct_spawn.y;
    global.ct_killed++;
    }
    else
        {
        x = o_t_spawn.x;
        y = o_t_spawn.y;
        global.ct_killed++;
        }
}

if ((wp_data[# wp_id,3]==wp_sniper) and os_type==os_windows){
view_xview[0] =floor( x-(view_wview/2)+(mouse_x-x)/4);
view_yview[0] =floor( y-(view_hview/2)+(mouse_y-y)/4);
}
else
{
view_xview[0] =floor( x - (view_wview[0]/2))
view_yview[0] =floor( y - (view_hview[0]/2));
}

if (mouse_check_button(mb_left))
{
//
if (os_type == os_windows)
if (can_shoot)
{
scr_player_shoot();
}
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="o_CollisionBox">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>x = xprevious;
y = yprevious;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="57">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Shoot grenade
if g_shoot
{
with (instance_create(x, y, obj_Player_Granade))
    {
    direction = other.image_angle + 10 - random(20);
    speed = min(20, other.g_timer);
    spd = speed;
    }
g_shoot = false;
g_timer = 1;
alarm[1] = room_speed * 3;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="51">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Grenade timer
if g_shoot and g_timer &lt; 80
{
g_timer += 1;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="50">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string></string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (os_type==os_android)
{
draw_set_alpha(0.75);
draw_circle_colour(gui_x[0], gui_y[0], st_radius, c_lime, c_lime, true);
 draw_circle_colour(stick_x[0], stick_y[0], st_radius/2, c_lime, c_lime, true);
 draw_circle_colour(round_button_x[0], round_button_y[0], round_button_radius, c_lime, c_lime, true);
//draw_set_alpha(1);
//  draw_sprite_stretched(s_joystick,1,gui_x[0],gui_y[0],st_radius*2,st_radius*2);
// draw_sprite_stretched(s_joystick,1,gui_x[1],gui_y[1],st_radius*2,st_radius*2);
 
 
 //
 draw_circle_colour(gui_x[1], gui_y[1], st_radius, c_lime, c_lime, true);
 draw_circle_colour(stick_x[1], stick_y[1], st_radius/2, c_lime, c_lime, true);
 draw_set_alpha(0.25);
 draw_circle_colour(gui_x[0], gui_y[0], st_radius, c_lime, c_lime, false); draw_circle_colour(stick_x[0], stick_y[0], st_radius/2, c_lime, c_lime, false);
  draw_circle_colour(round_button_x[0], round_button_y[0], round_button_radius, c_lime, c_lime, false);
//draw_set_alpha(1);
//draw_sprite_stretched(s_joystick_small,1,stick_x[0],stick_y[0],st_radius,st_radius);
//draw_sprite_stretched(s_joystick_small,1,stick_x[1],stick_y[1],st_radius,st_radius);

 
 //
 draw_circle_colour(gui_x[1], gui_y[1], st_radius, c_lime, c_lime, false);
  draw_circle_colour(stick_x[1], stick_y[1], st_radius/2, c_lime, c_lime, false);
 draw_set_alpha(1);
 
 
 if (g_shoot and g_timer&gt;1)
 {
 draw_set_alpha(0.75);
 var xconst = round_button_radius;
 var x_start = round_button_x[0]-(xconst);
 var x_end =(xconst*2);
 draw_rectangle_colour(x_start, round_button_y[0]+(round_button_radius+5),x_start+x_end,round_button_y[0]+(round_button_radius+10), c_lime, c_lime,c_lime,c_lime, true);
 draw_rectangle_colour(round_button_x[0]-(xconst), round_button_y[0]+(round_button_radius+5),x_start+((g_timer/80)*(xconst*2)),round_button_y[0]+(round_button_radius+10),c_lime,c_lime,c_lime,c_lime,false);
 
 
 }
 }
 
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Step


//if (os_type == os_windows)
//{draw_shadow();}
var xx = x;
var yy = y;

if (shooting) {

xx = x+lengthdir_x(-3,image_angle);
yy = y+lengthdir_y(-3,image_angle);

}
if (ds_map_find_value(global.Engine_Settings,"g-ChrShadows")){
draw_set_blend_mode_ext(bm_one,bm_inv_src_alpha);
draw_sprite_ext(s_feet,feet_index,xx+16,yy+16,1,1,image_angle,c_black,shadow_intensity);
draw_sprite_ext(sprite_index,image_index,xx+16,yy+16,1,1,image_angle,c_black,shadow_intensity);
draw_sprite_ext(wp_data[# wp_id,1],0,xx+16,yy+16,1,1,image_angle,c_black,shadow_intensity);
draw_sprite_ext(head_sprite,head_index,xx+16,yy+16,1,1,image_angle,c_black,shadow_intensity);
draw_set_blend_mode(bm_normal);
}
draw_sprite_ext(s_feet,feet_index,xx,yy,1,1,image_angle,c_white,1);

//draw_sprite_ext(s_feet,feet_index,xx,yy,1,1,image_angle,c_black,0.5);
//draw_set_blend_mode(bm_add);

draw_sprite_ext(sprite_index,image_index,xx,yy,image_xscale,image_yscale,image_angle,image_blend,image_alpha);
draw_sprite_ext(wp_data[# wp_id,1],0,xx,yy,1,1,image_angle,c_white,1);
draw_sprite_ext(head_sprite,head_index,xx,yy,1,1,image_angle,c_white,1);

//draw_set_blend_mode(bm_normal);


</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
